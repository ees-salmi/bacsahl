[{"/home/elmustapha/Bureau/bacsahl/src/index.js":"1","/home/elmustapha/Bureau/bacsahl/src/serviceWorker.js":"2","/home/elmustapha/Bureau/bacsahl/src/App.js":"3","/home/elmustapha/Bureau/bacsahl/src/components/MainComponent.js":"4","/home/elmustapha/Bureau/bacsahl/src/redux/configureStore.js":"5","/home/elmustapha/Bureau/bacsahl/src/components/DishdetailComponent.js":"6","/home/elmustapha/Bureau/bacsahl/src/components/HeaderComponent.js":"7","/home/elmustapha/Bureau/bacsahl/src/components/products.js":"8","/home/elmustapha/Bureau/bacsahl/src/components/HomeComponent.js":"9","/home/elmustapha/Bureau/bacsahl/src/shared/dishes.js":"10","/home/elmustapha/Bureau/bacsahl/src/components/AboutComponent.js":"11","/home/elmustapha/Bureau/bacsahl/src/components/FooterComponent.js":"12","/home/elmustapha/Bureau/bacsahl/src/components/Form.js":"13","/home/elmustapha/Bureau/bacsahl/src/shared/promotions.js":"14","/home/elmustapha/Bureau/bacsahl/src/components/MenuComponent.js":"15","/home/elmustapha/Bureau/bacsahl/src/shared/leaders.js":"16","/home/elmustapha/Bureau/bacsahl/src/shared/comments.js":"17","/home/elmustapha/Bureau/bacsahl/src/redux/reducer.js":"18","/home/elmustapha/Bureau/bacsahl/src/components/CommentForm.js":"19","/home/elmustapha/Bureau/bacsahl/src/service/ProductService.js":"20","/home/elmustapha/Bureau/bacsahl/src/components/HorizontalForm.js":"21"},{"size":641,"mtime":1609109632248,"results":"22","hashOfConfig":"23"},{"size":5086,"mtime":1588576396731,"results":"24","hashOfConfig":"23"},{"size":587,"mtime":1602869669129,"results":"25","hashOfConfig":"23"},{"size":2821,"mtime":1609327476294,"results":"26","hashOfConfig":"23"},{"size":252,"mtime":1602869633620,"results":"27","hashOfConfig":"23"},{"size":2944,"mtime":1604742977622,"results":"28","hashOfConfig":"23"},{"size":4813,"mtime":1609880145292,"results":"29","hashOfConfig":"23"},{"size":2541,"mtime":1609791902840,"results":"30","hashOfConfig":"23"},{"size":3389,"mtime":1604740218720,"results":"31","hashOfConfig":"23"},{"size":3019,"mtime":1602543679692,"results":"32","hashOfConfig":"23"},{"size":5282,"mtime":1602709909418,"results":"33","hashOfConfig":"23"},{"size":2665,"mtime":1602535551352,"results":"34","hashOfConfig":"23"},{"size":19906,"mtime":1604948523841,"results":"35","hashOfConfig":"23"},{"size":435,"mtime":1602524519663,"results":"36","hashOfConfig":"23"},{"size":1371,"mtime":1602624990198,"results":"37","hashOfConfig":"23"},{"size":2345,"mtime":1602524562552,"results":"38","hashOfConfig":"23"},{"size":4117,"mtime":1602524608761,"results":"39","hashOfConfig":"23"},{"size":393,"mtime":1602869593659,"results":"40","hashOfConfig":"23"},{"size":2894,"mtime":1605050306910,"results":"41","hashOfConfig":"23"},{"size":591,"mtime":1609634441670,"results":"42","hashOfConfig":"23"},{"size":1963,"mtime":1609794961638,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1vum5a3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/elmustapha/Bureau/bacsahl/src/index.js",[],["89","90"],"/home/elmustapha/Bureau/bacsahl/src/serviceWorker.js",[],"/home/elmustapha/Bureau/bacsahl/src/App.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/MainComponent.js",[],"/home/elmustapha/Bureau/bacsahl/src/redux/configureStore.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/DishdetailComponent.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/HeaderComponent.js",["91"],"/home/elmustapha/Bureau/bacsahl/src/components/products.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/HomeComponent.js",[],"/home/elmustapha/Bureau/bacsahl/src/shared/dishes.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/AboutComponent.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/FooterComponent.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/Form.js",["92","93","94","95","96"],"\nimport React, { Component }                                    from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row }  from 'reactstrap';\nimport { Control, LocalForm, Errors }                          from 'react-redux-form';\nimport { Link }                                                from 'react-router-dom'\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val)) && /^06/i.test(val) ;\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@uhp.ac.ma+\\.[A-Z]{2,4}$/i.test(val);\n\nexport default class Forms extends Component {\n         \n     \n         handleSubmit(values) {\n            console.log('Current State is: ' + JSON.stringify(values));\n            alert('Current State is: ' + JSON.stringify(values));\n            // event.preventDefault();\n        }\n        render() {\n                 \n            return(\n\n            <div className=\"container\">\n    \n                <div className=\"row row-content\">\n    \n                   <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n    \n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"href=\"mailto:confusion@food.net\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n            \n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                                <Col md={10}>\n                                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                                        placeholder=\"First Name\"\n                                                        className=\"form-control\"\n                                                        validators={{\n                                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                                        }}\n                                                        />\n                                                    <Errors\n                                                        className=\"text-danger\"\n                                                        model=\".firstname\"\n                                                        show=\"touched\"\n                                                        messages={{\n                                                            required: 'Required',\n                                                            minLength: 'Must be greater than 2 characters',\n                                                            maxLength: 'Must be 15 characters or less'\n                                                        }}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                                <Col md={10}>\n                                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                                        placeholder=\"Last Name\"\n                                                        className=\"form-control\"\n                                                        validators={{\n                                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                                        }}\n                                                        />\n                                                    <Errors\n                                                        className=\"text-danger\"\n                                                        model=\".lastname\"\n                                                        show=\"touched\"\n                                                        messages={{\n                                                            required: 'Required',\n                                                            minLength: 'Must be greater than 2 characters',\n                                                            maxLength: 'Must be 15 characters or less'\n                                                        }}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                                <Col md={10}>\n                                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                                        placeholder=\"Tel. Number\"\n                                                        className=\"form-control\"\n                                                        validators={{\n                                                            required, minLength: minLength(10), maxLength: maxLength(10), isNumber\n                                                        }}\n                                                        />\n                                                    <Errors\n                                                        className=\"text-danger\"\n                                                        model=\".telnum\"\n                                                        show=\"touched\"\n                                                        messages={{\n                                                            required: 'Required',\n                                                            minLength: ' Must equal 10 numbers',\n                                                            maxLength: ' Must equal 10 numbers',\n                                                            isNumber: ' Must start with 06'\n                                                        }}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row className=\"form-group\">\n                                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                                <Col md={10}>\n                                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                                        placeholder=\"Email\"\n                                                        className=\"form-control\"\n                                                        validators={{\n                                                            required, validEmail\n                                                        }}\n                                                        />\n                                                    <Errors\n                                                        className=\"text-danger\"\n                                                        model=\".email\"\n                                                        show=\"touched\"\n                                                        messages={{\n                                                            required: 'Required',\n                                                            validEmail: 'Invalid Email Address'\n                                                        }}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                                 <Row className=\"form-group\">\n                                                       <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                                       <Col md={10}>\n                                                               <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                                                  rows=\"12\"\n                                                                className=\"form-control\" />\n                                                         </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Col md={{size:10, offset: 2}}>\n                                            <Button type=\"submit\" color=\"primary\">\n                                            Send Feedback\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </LocalForm>\n                                \n                                </div>\n            );\n        \n        }\n        \n        \n        \n        \n        \n        \n        \n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export default class Forms extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n//             firstname: '',\n//             lastname: '',\n//             telnum: '',\n//             email: '',\n//             agree: false,\n//             contactType: 'Tel.',\n//             message: '',\n//             touched: {\n//                 firstname: false,\n//                 lastname: false,\n//                 telnum: false,\n//                 email: false\n//             }\n//         };\n\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//         this.handleInputChange = this.handleInputChange.bind(this);\n//         this.handleBlur = this.handleBlur.bind(this);\n    \n        \n//     }\n//     handleBlur = (field) => (evt) => {\n//         this.setState({\n//             touched: { ...this.state.touched, [field]: true }\n//         });\n//     }\n\n//     validate(firstname, lastname, telnum, email) {\n//         const errors = {\n//             firstname: '',\n//             lastname: '',\n//             telnum: '',\n//             email: ''\n//         };\n\n//         if (this.state.touched.firstname && firstname.length < 3)\n//             errors.firstname = 'First Name should be >= 3 characters';\n//         else if (this.state.touched.firstname && firstname.length > 10)\n//             errors.firstname = 'First Name should be <= 10 characters';\n\n//         if (this.state.touched.lastname && lastname.length < 3)\n//             errors.lastname = 'Last Name should be >= 3 characters';\n//         else if (this.state.touched.lastname && lastname.length > 10)\n//             errors.lastname = 'Last Name should be <= 10 characters';\n\n//         const reg = /^\\d+$/;\n//         if (this.state.touched.telnum && !reg.test(telnum))\n//             errors.telnum = 'Tel. Number should contain only numbers';\n\n//         if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\n//             errors.email = 'Email should contain a @';\n\n//         return errors;\n//     }\n\n//     handleInputChange(event) {\n//         const target = event.target;\n//         const value = target.type === 'checkbox' ? target.checked : target.value;\n//         const name = target.name;\n    \n//         this.setState({\n//           [name]: value\n//         });\n//     }\n\n//     handleSubmit(event) {\n//         console.log('Current State is: ' + JSON.stringify(this.state));\n//         alert('Current State is: ' + JSON.stringify(this.state));\n//        // event.preventDefault();\n//     }\n\n\n//     render() {\n//         const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n//          console.log(\"form\")\n//                  return (\n//         <div className=\"row row-content\">\n//         <div className=\"col-12\">\n//         <h3>Send us your Feedback</h3>\n//         </div>\n//         <div className=\"col-12 col-md-9\">\n//         <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n//                             <Row className=\"form-group\">\n//                                 <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n//                                 <Col md={10}>\n//                                     <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n//                                         placeholder=\"First Name\"\n//                                         className=\"form-control\"\n//                                          />\n//                                 </Col>\n//                             </Row>\n//                             <Row className=\"form-group\">\n//                                 <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n//                                 <Col md={10}>\n//                                     <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n//                                         placeholder=\"Last Name\"\n//                                         className=\"form-control\"\n//                                          />\n//                                 </Col>\n//                             </Row>\n//                             <Row className=\"form-group\">\n//                                 <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n//                                 <Col md={10}>\n//                                     <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n//                                         placeholder=\"Tel. Number\"\n//                                         className=\"form-control\"\n//                                          />\n//                                 </Col>\n//                             </Row>\n//                             <Row className=\"form-group\">\n//                                 <Label htmlFor=\"email\" md={2}>Email</Label>\n//                                 <Col md={10}>\n//                                     <Control.text model=\".email\" id=\"email\" name=\"email\"\n//                                         placeholder=\"Email\"\n//                                         className=\"form-control\" />\n//                                 </Col>\n//                             </Row>\n//                             <Row className=\"form-group\">\n//                                 <Col md={{size: 6, offset: 2}}>\n//                                     <div className=\"form-check\">\n//                                         <Label check>\n//                                             <Control.checkbox model=\".agree\" name=\"agree\"\n//                                                 className=\"form-check-input\"\n//                                                  /> {' '}\n//                                                 <strong>May we contact you?</strong>\n//                                         </Label>\n//                                     </div>\n//                                 </Col>\n//                                 <Col md={{size: 3, offset: 1}}>\n//                                     <Control.select model=\".contactType\" name=\"contactType\"\n//                                         className=\"form-control\">\n//                                         <option>Tel.</option>\n//                                         <option>Email</option>\n//                                     </Control.select>\n//                                 </Col>\n//                             </Row>\n//                             <Row className=\"form-group\">\n//                                 <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n//                                 <Col md={10}>\n//                                     <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n//                                         rows=\"12\"\n//                                         className=\"form-control\" />\n//                                 </Col>\n//                             </Row>\n//                             <Row className=\"form-group\">\n//                                 <Col md={{size:10, offset: 2}}>\n//                                     <Button type=\"submit\" color=\"primary\">\n//                                     Send Feedback\n//                                     </Button>\n//                                 </Col>\n//                             </Row>\n//                         </LocalForm>\n//         </div>\n//         </div>\n//                  );\n\n\n\n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react'\n\n\n// const heading = {\n//     color : 'green',\n//     font : '30px',  \n  \n// }\n\n// export default class Form extends Component {\n//     constructor(props) {\n//         super(props)\n    \n//         this.state = {\n//              username : 'elmustapha',\n//              password : 'pass'\n//         }\n//     }\n\n//     handleUserNameChange = (event) => {\n//         this.setState({\n//             username : event.target.value\n//         })\n\n//     }\n//     handlePasswordChange = (event) => {\n//         this.setState({\n//             password : event.target.value\n//         })\n\n//     }\n    \n//     render() {\n//         console.log(\"form\")\n//         return (\n//             <form>\n//             <div>\n//                 <label style={heading}>username : </label>\n//                 <input type=\"text\" style={heading} value={this.state.username} onChange={this.handleUserNameChange} ></input>\n//             </div>\n//             <div>\n//                 <label>password : </label>\n//                 <input type=\"password\" value={this.state.password} onChange={this.handlePasswordChange} ></input>                              \n//             </div>\n//             <div>\n//                 <label>Comments : </label>\n//                 <textarea  value={this.state.password} onChange={this.handlePasswordChange} >\n//                 </textarea>                              \n//             </div>\n//             </form>\n//         )\n//     }\n// }\n","/home/elmustapha/Bureau/bacsahl/src/shared/promotions.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/MenuComponent.js",[],"/home/elmustapha/Bureau/bacsahl/src/shared/leaders.js",[],"/home/elmustapha/Bureau/bacsahl/src/shared/comments.js",[],"/home/elmustapha/Bureau/bacsahl/src/redux/reducer.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/CommentForm.js",["97","98","99"],"import React ,{Component}                          from 'react';\n//import { Link }                       from 'react-router-dom'\nimport {Button,  Label ,Modal,Form,FormGroup,Input,ModalBody,ModalHeader }        from 'reactstrap';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isModalOpen : false\n          \n        };\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n    \n\n    render(){\n\n    \n    return(\n        \n          \n            <div className=\"col-12\">\n\n               <Button style={{}} onClick={this.toggleModal} value=\"submit\" color=\"primary\"><i class=\"fa fa-pencil\"></i>submit comment</Button>\n               <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                            <ModalHeader toggle={this.toggleModal}>submit comment</ModalHeader>\n                            <ModalBody>\n                                <Form onSubmit={this.handleLogin}>\n                                <FormGroup>\n                                    <Label htmlFor=\"rating\"></Label>\n                                    <Input type=\"select\" id=\"rating\" name=\"rating\"\n                                        innerRef={(input) => this.username = input} >\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Input>\n                                </FormGroup>\n                                 <FormGroup>\n                                    <Label htmlFor=\"name\">name</Label>\n                                    \n                                    <Input type=\"text\" id=\"\" name=\"name\"\n                                        innerRef={(input) => this.password = input}  />\n                                </FormGroup> \n                                <FormGroup>\n                                    <Label for=\"exampleText\"  md={4} >Text Area</Label>\n                                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" rows={4}/>\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                            </Form>\n                            </ModalBody>\n                             </Modal>\n                            \n            </div>\n            \n        \n    );\n}\n}\n\nexport default CommentForm;","/home/elmustapha/Bureau/bacsahl/src/service/ProductService.js",[],"/home/elmustapha/Bureau/bacsahl/src/components/HorizontalForm.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":31,"nodeType":"106","messageId":"107","endLine":2,"endColumn":40},{"ruleId":"108","severity":1,"message":"109","line":65,"column":53,"nodeType":"110","endLine":71,"endColumn":59},{"ruleId":"108","severity":1,"message":"109","line":87,"column":53,"nodeType":"110","endLine":93,"endColumn":59},{"ruleId":"108","severity":1,"message":"109","line":109,"column":53,"nodeType":"110","endLine":115,"endColumn":59},{"ruleId":"108","severity":1,"message":"109","line":132,"column":53,"nodeType":"110","endLine":138,"endColumn":59},{"ruleId":"108","severity":1,"message":"111","line":153,"column":64,"nodeType":"110","endLine":155,"endColumn":92},{"ruleId":"104","severity":1,"message":"112","line":6,"column":7,"nodeType":"106","messageId":"107","endLine":6,"endColumn":15},{"ruleId":"104","severity":1,"message":"113","line":7,"column":7,"nodeType":"106","messageId":"107","endLine":7,"endColumn":16},{"ruleId":"104","severity":1,"message":"114","line":8,"column":7,"nodeType":"106","messageId":"107","endLine":8,"endColumn":16},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'required' is assigned a value but never used.","'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]